/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.solteq.liferay.training.employees.repository.db.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.solteq.liferay.training.employees.repository.db.model.STQEmployee;
import com.solteq.liferay.training.employees.repository.db.model.STQEmployeeModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the STQEmployee service. Represents a row in the &quot;stq_STQEmployee&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>STQEmployeeModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link STQEmployeeImpl}.
 * </p>
 *
 * @author Solteq
 * @see STQEmployeeImpl
 * @generated
 */
public class STQEmployeeModelImpl
	extends BaseModelImpl<STQEmployee> implements STQEmployeeModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a stq employee model instance should use the <code>STQEmployee</code> interface instead.
	 */
	public static final String TABLE_NAME = "stq_STQEmployee";

	public static final Object[][] TABLE_COLUMNS = {
		{"employeeId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"firstName", Types.VARCHAR}, {"lastName", Types.VARCHAR},
		{"email", Types.VARCHAR}, {"jobTitle", Types.VARCHAR},
		{"phoneNumber", Types.VARCHAR}, {"companyName", Types.VARCHAR},
		{"department", Types.VARCHAR}, {"workLocation", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("employeeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("firstName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lastName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("jobTitle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("phoneNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("department", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workLocation", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table stq_STQEmployee (employeeId LONG not null primary key,companyId LONG,firstName VARCHAR(75) null,lastName VARCHAR(75) null,email VARCHAR(75) null,jobTitle VARCHAR(75) null,phoneNumber VARCHAR(75) null,companyName VARCHAR(75) null,department VARCHAR(75) null,workLocation VARCHAR(100) null)";

	public static final String TABLE_SQL_DROP = "drop table stq_STQEmployee";

	public static final String ORDER_BY_JPQL =
		" ORDER BY stqEmployee.employeeId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY stq_STQEmployee.employeeId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYNAME_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long DEPARTMENT_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long EMAIL_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long EMPLOYEEID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public STQEmployeeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _employeeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmployeeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _employeeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return STQEmployee.class;
	}

	@Override
	public String getModelClassName() {
		return STQEmployee.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<STQEmployee, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<STQEmployee, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<STQEmployee, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((STQEmployee)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<STQEmployee, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<STQEmployee, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(STQEmployee)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<STQEmployee, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<STQEmployee, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<STQEmployee, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<STQEmployee, Object>>
				attributeGetterFunctions =
					new LinkedHashMap<String, Function<STQEmployee, Object>>();

			attributeGetterFunctions.put(
				"employeeId", STQEmployee::getEmployeeId);
			attributeGetterFunctions.put(
				"companyId", STQEmployee::getCompanyId);
			attributeGetterFunctions.put(
				"firstName", STQEmployee::getFirstName);
			attributeGetterFunctions.put("lastName", STQEmployee::getLastName);
			attributeGetterFunctions.put("email", STQEmployee::getEmail);
			attributeGetterFunctions.put("jobTitle", STQEmployee::getJobTitle);
			attributeGetterFunctions.put(
				"phoneNumber", STQEmployee::getPhoneNumber);
			attributeGetterFunctions.put(
				"companyName", STQEmployee::getCompanyName);
			attributeGetterFunctions.put(
				"department", STQEmployee::getDepartment);
			attributeGetterFunctions.put(
				"workLocation", STQEmployee::getWorkLocation);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<STQEmployee, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<STQEmployee, ?>> attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<STQEmployee, ?>>();

			attributeSetterBiConsumers.put(
				"employeeId",
				(BiConsumer<STQEmployee, Long>)STQEmployee::setEmployeeId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<STQEmployee, Long>)STQEmployee::setCompanyId);
			attributeSetterBiConsumers.put(
				"firstName",
				(BiConsumer<STQEmployee, String>)STQEmployee::setFirstName);
			attributeSetterBiConsumers.put(
				"lastName",
				(BiConsumer<STQEmployee, String>)STQEmployee::setLastName);
			attributeSetterBiConsumers.put(
				"email",
				(BiConsumer<STQEmployee, String>)STQEmployee::setEmail);
			attributeSetterBiConsumers.put(
				"jobTitle",
				(BiConsumer<STQEmployee, String>)STQEmployee::setJobTitle);
			attributeSetterBiConsumers.put(
				"phoneNumber",
				(BiConsumer<STQEmployee, String>)STQEmployee::setPhoneNumber);
			attributeSetterBiConsumers.put(
				"companyName",
				(BiConsumer<STQEmployee, String>)STQEmployee::setCompanyName);
			attributeSetterBiConsumers.put(
				"department",
				(BiConsumer<STQEmployee, String>)STQEmployee::setDepartment);
			attributeSetterBiConsumers.put(
				"workLocation",
				(BiConsumer<STQEmployee, String>)STQEmployee::setWorkLocation);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_employeeId = employeeId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return "";
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_firstName = firstName;
	}

	@Override
	public String getLastName() {
		if (_lastName == null) {
			return "";
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lastName = lastName;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return "";
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_email = email;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalEmail() {
		return getColumnOriginalValue("email");
	}

	@Override
	public String getJobTitle() {
		if (_jobTitle == null) {
			return "";
		}
		else {
			return _jobTitle;
		}
	}

	@Override
	public void setJobTitle(String jobTitle) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_jobTitle = jobTitle;
	}

	@Override
	public String getPhoneNumber() {
		if (_phoneNumber == null) {
			return "";
		}
		else {
			return _phoneNumber;
		}
	}

	@Override
	public void setPhoneNumber(String phoneNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_phoneNumber = phoneNumber;
	}

	@Override
	public String getCompanyName() {
		if (_companyName == null) {
			return "";
		}
		else {
			return _companyName;
		}
	}

	@Override
	public void setCompanyName(String companyName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyName = companyName;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalCompanyName() {
		return getColumnOriginalValue("companyName");
	}

	@Override
	public String getDepartment() {
		if (_department == null) {
			return "";
		}
		else {
			return _department;
		}
	}

	@Override
	public void setDepartment(String department) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_department = department;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalDepartment() {
		return getColumnOriginalValue("department");
	}

	@Override
	public String getWorkLocation() {
		if (_workLocation == null) {
			return "";
		}
		else {
			return _workLocation;
		}
	}

	@Override
	public void setWorkLocation(String workLocation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_workLocation = workLocation;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), STQEmployee.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public STQEmployee toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, STQEmployee>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		STQEmployeeImpl stqEmployeeImpl = new STQEmployeeImpl();

		stqEmployeeImpl.setEmployeeId(getEmployeeId());
		stqEmployeeImpl.setCompanyId(getCompanyId());
		stqEmployeeImpl.setFirstName(getFirstName());
		stqEmployeeImpl.setLastName(getLastName());
		stqEmployeeImpl.setEmail(getEmail());
		stqEmployeeImpl.setJobTitle(getJobTitle());
		stqEmployeeImpl.setPhoneNumber(getPhoneNumber());
		stqEmployeeImpl.setCompanyName(getCompanyName());
		stqEmployeeImpl.setDepartment(getDepartment());
		stqEmployeeImpl.setWorkLocation(getWorkLocation());

		stqEmployeeImpl.resetOriginalValues();

		return stqEmployeeImpl;
	}

	@Override
	public STQEmployee cloneWithOriginalValues() {
		STQEmployeeImpl stqEmployeeImpl = new STQEmployeeImpl();

		stqEmployeeImpl.setEmployeeId(
			this.<Long>getColumnOriginalValue("employeeId"));
		stqEmployeeImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		stqEmployeeImpl.setFirstName(
			this.<String>getColumnOriginalValue("firstName"));
		stqEmployeeImpl.setLastName(
			this.<String>getColumnOriginalValue("lastName"));
		stqEmployeeImpl.setEmail(this.<String>getColumnOriginalValue("email"));
		stqEmployeeImpl.setJobTitle(
			this.<String>getColumnOriginalValue("jobTitle"));
		stqEmployeeImpl.setPhoneNumber(
			this.<String>getColumnOriginalValue("phoneNumber"));
		stqEmployeeImpl.setCompanyName(
			this.<String>getColumnOriginalValue("companyName"));
		stqEmployeeImpl.setDepartment(
			this.<String>getColumnOriginalValue("department"));
		stqEmployeeImpl.setWorkLocation(
			this.<String>getColumnOriginalValue("workLocation"));

		return stqEmployeeImpl;
	}

	@Override
	public int compareTo(STQEmployee stqEmployee) {
		long primaryKey = stqEmployee.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof STQEmployee)) {
			return false;
		}

		STQEmployee stqEmployee = (STQEmployee)object;

		long primaryKey = stqEmployee.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<STQEmployee> toCacheModel() {
		STQEmployeeCacheModel stqEmployeeCacheModel =
			new STQEmployeeCacheModel();

		stqEmployeeCacheModel.employeeId = getEmployeeId();

		stqEmployeeCacheModel.companyId = getCompanyId();

		stqEmployeeCacheModel.firstName = getFirstName();

		String firstName = stqEmployeeCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			stqEmployeeCacheModel.firstName = null;
		}

		stqEmployeeCacheModel.lastName = getLastName();

		String lastName = stqEmployeeCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			stqEmployeeCacheModel.lastName = null;
		}

		stqEmployeeCacheModel.email = getEmail();

		String email = stqEmployeeCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			stqEmployeeCacheModel.email = null;
		}

		stqEmployeeCacheModel.jobTitle = getJobTitle();

		String jobTitle = stqEmployeeCacheModel.jobTitle;

		if ((jobTitle != null) && (jobTitle.length() == 0)) {
			stqEmployeeCacheModel.jobTitle = null;
		}

		stqEmployeeCacheModel.phoneNumber = getPhoneNumber();

		String phoneNumber = stqEmployeeCacheModel.phoneNumber;

		if ((phoneNumber != null) && (phoneNumber.length() == 0)) {
			stqEmployeeCacheModel.phoneNumber = null;
		}

		stqEmployeeCacheModel.companyName = getCompanyName();

		String companyName = stqEmployeeCacheModel.companyName;

		if ((companyName != null) && (companyName.length() == 0)) {
			stqEmployeeCacheModel.companyName = null;
		}

		stqEmployeeCacheModel.department = getDepartment();

		String department = stqEmployeeCacheModel.department;

		if ((department != null) && (department.length() == 0)) {
			stqEmployeeCacheModel.department = null;
		}

		stqEmployeeCacheModel.workLocation = getWorkLocation();

		String workLocation = stqEmployeeCacheModel.workLocation;

		if ((workLocation != null) && (workLocation.length() == 0)) {
			stqEmployeeCacheModel.workLocation = null;
		}

		return stqEmployeeCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<STQEmployee, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<STQEmployee, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<STQEmployee, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((STQEmployee)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, STQEmployee>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					STQEmployee.class, ModelWrapper.class);

	}

	private long _employeeId;
	private long _companyId;
	private String _firstName;
	private String _lastName;
	private String _email;
	private String _jobTitle;
	private String _phoneNumber;
	private String _companyName;
	private String _department;
	private String _workLocation;

	public <T> T getColumnValue(String columnName) {
		Function<STQEmployee, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((STQEmployee)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("employeeId", _employeeId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("firstName", _firstName);
		_columnOriginalValues.put("lastName", _lastName);
		_columnOriginalValues.put("email", _email);
		_columnOriginalValues.put("jobTitle", _jobTitle);
		_columnOriginalValues.put("phoneNumber", _phoneNumber);
		_columnOriginalValues.put("companyName", _companyName);
		_columnOriginalValues.put("department", _department);
		_columnOriginalValues.put("workLocation", _workLocation);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("employeeId", 1L);

		columnBitmasks.put("companyId", 2L);

		columnBitmasks.put("firstName", 4L);

		columnBitmasks.put("lastName", 8L);

		columnBitmasks.put("email", 16L);

		columnBitmasks.put("jobTitle", 32L);

		columnBitmasks.put("phoneNumber", 64L);

		columnBitmasks.put("companyName", 128L);

		columnBitmasks.put("department", 256L);

		columnBitmasks.put("workLocation", 512L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private STQEmployee _escapedModel;

}